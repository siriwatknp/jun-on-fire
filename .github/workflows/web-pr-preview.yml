name: Web-PR-Preview

on:
  pull_request:
    branches:
      - main
    paths-ignore:
      - "functions/**"
      - "docs/**"

jobs:
  deploy-preview:
    runs-on: ubuntu-latest
    environment: staging

    # https://github.com/FirebaseExtended/action-hosting-deploy/issues/321
    # permission for bot comment
    permissions:
      contents: read
      pull-requests: write
      checks: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Get the PR number
        uses: actions/github-script@v7
        id: get_pr_data
        with:
          script: |
            const pr = context.payload.pull_request;
            if (!pr) {
              throw new Error('No pull request found');
            }
            return pr;

      - name: Save version from PR number
        id: save_version
        run: |
          echo "pr_number=${{ fromJson(steps.get_pr_data.outputs.result).number }}" >> "$GITHUB_OUTPUT"

      # temporary workaround for prevent Next.js "Checking validity of types" when build
      - name: Delete functions folder
        run: rm -rf functions/

      - name: Install & Build
        run: npm ci && npm run build
        env:
          NEXT_PUBLIC_FIREBASE_API_KEY: ${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY }}
          NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: ${{ secrets.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }}
          NEXT_PUBLIC_FIREBASE_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}
          NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET: ${{ secrets.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET }}
          NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID }}
          NEXT_PUBLIC_FIREBASE_APP_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_APP_ID }}
          NEXT_PUBLIC_LINE_LIFF_ID: ${{ secrets.NEXT_PUBLIC_LINE_LIFF_ID }}

      - uses: FirebaseExtended/action-hosting-deploy@v0.9.0
        with:
          firebaseServiceAccount: "${{ secrets.FIREBASE_SERVICE_ACCOUNT }}"
          projectId: "${{ secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}"
          channelId: PR-${{steps.save_version.outputs.pr_number}}
          repoToken: "${{ secrets.GITHUB_TOKEN }}"
          expires: 30d
